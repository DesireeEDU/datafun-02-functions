# xtra_p2.py

"""
Desiree Thompson - Module 2 - January 23, 2023

Utilizing doctest to ensure functions being developed are working as desired.

Optional bonus. See course site for details.

>>> add_two(1,2)
3

>>> add_two("hello"," world")
'hello world'

>>> add_triangle_list( [3,4,5] )
12

>>> add_any(1,1,1,1,1,1,1,1)
8

>>> add_any_with_keywords(a=1,b=2)
3

>>> convert_ctof(0)
32.0

>>> convert_ctof(100)
212.0
"""

import doctest
import decimal

# define some existing functions
def add_two(first, second):
    """Return the sum of any two arguments."""
    sum = first + second   # fix this line
    return sum


def add_triangle_list(list_triangle):
    """Return the sum of three numbers in a list."""
    sum = 0
    for value in list_triangle:
        sum = sum + value  # fix this line to add the value instead of 0
    return sum


def add_any(*args):
    """Return the sum of numbers, using built-in *args."""
    sum = 0
    for x in args:
        sum += x  # fix this line to add x instead of 1
    return sum


def add_any_with_keywords(**kwargs):
    """Return the sum of numbers, using built-in keyword args, **kwargs."""
    sum = 0
    for value in kwargs.values():  # use values() - name doesn't matter
        sum += value  # Use the popular and concise version of sum = sum + x
    return sum


# TODO: implment a new function to convert celsius to fahrenheit
# Use round as needed to make the test pass
# The name of the function is provided in the docstring above

def convert_ctof(Celsius):
    decimal.getcontext().prec = 4
    Fahrenheit = (9/5) * Celsius + 32
    return Fahrenheit


if __name__ == "__main__":

    print("===========================================================")
    print("Running doctest.testmod() function to unit test our code")
    print("===========================================================")
    print()
    doctest.testmod()
    print()
    print("===========================================================")
    print("If you don't see any results, all tests passed.")
    print("===========================================================")
    print("Run with the -v flag to show results regardless.")
    print("Hit up arrow (to get last command) and add space -v")
    print("===========================================================")

#Console results

===========================================================
Running doctest.testmod() function to unit test our code
===========================================================


===========================================================
If you don't see any results, all tests passed.
===========================================================
Run with the -v flag to show results regardless.
Hit up arrow (to get last command) and add space -v
===========================================================
PS C:\Users\Desiree\OneDrive\Documents\datafun-02-functions> & C:/Users/Desiree/Python/Python310/python.exe c:/Users/Desiree/OneDrive/Documents/datafun-02-functions/xtra_p2.py -v
===========================================================
Running doctest.testmod() function to unit test our code
===========================================================

Trying:
    add_two(1,2)
Expecting:
    3
ok
Trying:
    add_two("hello"," world")
Expecting:
    'hello world'
ok
Trying:
    add_triangle_list( [3,4,5] )
Expecting:
    12
ok
Trying:
    add_any(1,1,1,1,1,1,1,1)
Expecting:
    8
ok
Trying:
    add_any_with_keywords(a=1,b=2)
Expecting:
    3
ok
Trying:
    convert_ctof(0)
Expecting:
    32.0
ok
Trying:
    convert_ctof(100)
Expecting:
    212.0
ok
5 items had no tests:
    __main__.add_any
    __main__.add_any_with_keywords
    __main__.add_triangle_list
    __main__.add_two
    __main__.convert_ctof
1 items passed all tests:
   7 tests in __main__
7 tests in 6 items.
7 passed and 0 failed.
Test passed.

===========================================================
If you don't see any results, all tests passed.
===========================================================
Run with the -v flag to show results regardless.
Hit up arrow (to get last command) and add space -v
===========================================================

